- hosts: "jenkins_server"
  tasks: 
  - name: Install kubernetes repo gpg
    become: yes
    get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg

  - name: REPO
    shell:
      cmd: |
        echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

  - name: Install kubectl package
    become: yes
    apt:
      pkg:
        - kubectl
      state: latest
      update_cache: true

  - name: Set Kubeconfig
    shell:
      cmd: |
        CLUSTER_ID="{{ cluster_id }}"
        export PATH="$PATH:/home/$USER/yandex-cloud/bin"
        yc managed-kubernetes cluster get-credentials  netology-kuber --external --force
        kubectl create -f kube-user.yaml
        CERT=$(yc managed-kubernetes cluster get --id $CLUSTER_ID --format json | jq -r .master.master_auth.cluster_ca_certificate | awk '{gsub(/\\n/,"\n")}1' | base64 -i - | tr -d '\n' )
        SA_TOKEN=$(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep sc-kube | awk '{print $1}') -o json | jq -r .data.token | base64 --d)
        MASTER_ENDPOINT=$(yc managed-kubernetes cluster get --id $CLUSTER_ID --format json | jq -r .master.endpoints.external_v4_endpoint)
        kubectl config set-cluster kube-cluster --server=$MASTER_ENDPOINT --kubeconfig=kubeconfig
        kubectl config set clusters.kube-cluster.certificate-authority-data "$(echo "$CERT")" --kubeconfig=kubeconfig
        kubectl config set-credentials sc-kube --token=$SA_TOKEN --kubeconfig=kubeconfig
        kubectl config set-context kube-cluster-context --cluster=kube-cluster --user=sc-kube --server="$MASTER_ENDPOINT" --kubeconfig=kubeconfig
        kubectl config use-context kube-cluster-context --kubeconfig=kubeconfig
    delegate_to: 127.0.0.1

  - name: Put Kubeconfig to Multibranch Pipeline
    command:
      argv:
      - curl
      - -X
      - POST
      - "http://{{ jenkins_user }}:{{ token.json.data.tokenValue }}@{{ address }}/job/{{ pipelineName }}/credentials/store/folder/domain/_/createCredentials"
      - -F 
      - "secret=@./kubeconfig"
      - -F
      - 'json={
          "": "4",
          "credentials": {
            "scope": "GLOBAL",
            "id": "kubeconfig",
            "file": "secret",
            "description": "kubeconfig",
            "stapler-class": "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl",
            "$class": "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl"
          }
        }'
      - -H
      - "Jenkins-Crumb:{{ crumb.json.crumb }}"
    delegate_to: 127.0.0.1
